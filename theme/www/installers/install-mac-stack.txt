#!/bin/bash
# bash <(curl -s http://test.parentnode.dk/installers/install-mac-stack.txt)
# bash <(curl -s http://parentnode.local/installers/install-mac-stack.txt)


echo 
echo 
echo 
echo "                    Welcome to the          "
echo "           parentNode WebStack installer for MacOS"
echo
echo "--------------------------------------------------------"
echo
echo 
echo "Preparing for installation ..."
echo


# set bash as default terminal
current_shell=$(echo $SHELL | grep bash)
if [ -z "$current_shell" ]; then
	chsh -s /bin/bash
fi


# FORCE USER TO ENTER PASSWORD IF IT IS NOT ALREADY STORED
sudo ls &>/dev/null


catalina='10.15.[0-9]'
macos_version_minor=$(sw_vers | grep -E "ProductVersion:" | cut -f2)
macos_version_major=$(sw_vers -productVersion | cut -d '.' -f1,2)
macos_version_catalina=$(sw_vers | grep -E "ProductVersion:\t$catalina" | cut -f2)

if [ "$macos_version_minor" = "$macos_version_catalina" ]; then
	echo "You are running MacOS Catalina ($macos_version_major)"
	echo "Additional setup needed to continue running the installer"
	if [ ! -d /srv/sites ]; then
		echo "Setting up synthetic link on macOS: Catalina ($macos_version_major)"
		echo 
		if [ ! -d /var/parentnode ]; then
			echo -e 'srv\tvar/parentnode' | sudo tee -a /etc/synthetic.conf
			sudo mkdir /var/parentnode
			sudo chown $(logname):staff /var/parentnode
			#sudo reboot
			echo "Please reboot to activate synthetic link and then run installer again"
			exit
		fi
		if [ ! -d ~/Sites ]; then
			mkdir ~/Sites
			sudo chown $(logname):staff ~/Sites
		fi
		sudo ln -s ~/Sites /var/parentnode/sites
		echo "Setting up macOS: Catalina ($macos_version_major) done"
	else
		echo "Setting up macOS: Catalina ($macos_version_major) done"
	fi
else 
	echo "MacOS version: $macos_version_major"
	echo "You are free to proceed"
fi
 

# Check xcode
xcode_ok=$(xcodebuild -version exit 2>/dev/null || echo "")
if [ -z "$xcode_ok" ]; then

	echo
	echo "You need to install Xcode before you can continue."
	echo
	open https://itunes.apple.com/gh/app/xcode/id497799835
	exit 1;

fi


# Check commandline tools
xcode_cl_ok=$(xcode-select -p 2>&1 | grep "Xcode.app/Contents/Developer")
if [ -z "$xcode_cl_ok" ]; then

	echo ""
	echo "You must install commandline tools"
	echo ""

	xcode-select --install

	echo
	echo "Run the setup command again when the command line tools are installed. See you again."
	echo
	exit 1;
fi


# Check license
xcode_license=$(gcc --version 2>&1 | grep "license")
if [ -n "$xcode_license" ]; then

	echo ""
	echo "You must accept the Xcode license"
	echo ""

	sudo xcode-select --install

fi


macports_ok=$(port version 2>&1 | grep ^"Version" || echo "")
if [ -z "$macports_ok" ]; then
	echo
	echo "You need to install macports for macOS: v$macos_version_major before you can continue."
	echo
	echo "NOTE: The terminal must be restarted, after installing MacPorts"
	echo
	open https://macports.org/install.php
	exit 1;

else
	echo "Macports is installed updating macports base"
	sudo port selfupdate
fi

exit

# DOES TOOLS ALREADY EXIST - DELETE THEM AND CLONE AGAIN
if [ -d "/srv/tools" ]; then

	sudo rm -R /srv/tools

fi

echo
echo
echo "Cloning install tools"
echo
# CLONE THE FULL MAC INSTALL AND TOOLS FROM GITHUB
sudo git clone https://github.com/parentnode/mac_environment /srv/tools
# temp dev option
# sudo cp -R /srv/sites/parentnode/mac_environment /srv/tools

echo
echo
echo "Running installer"
echo
# RUN INSTALL SCRIPT
sudo bash /srv/tools/scripts/install.sh


